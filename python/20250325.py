
import random
import os

chinese_questions = {
    # 文学常识类（15题）
    "《红楼梦》中'机关算尽太聪明'形容的是谁？": ["王熙凤", "薛宝钗", "林黛玉", "贾探春"],
    "唐宋八大家中不属于宋代的是？": ["韩愈", "王安石", "苏轼", "欧阳修"],
    "鲁迅《朝花夕拾》中描写童年趣事的是？": ["《从百草园到三味书屋》", "《药》", "《祝福》", "《阿Q正传》"],
    "中国第一部纪传体通史是？": ["《史记》", "《汉书》", "《资治通鉴》", "《三国志》"],
    "《儒林外史》的作者是？": ["吴敬梓", "蒲松龄", "曹雪芹", "施耐庵"],
    
    # 诗词填空类（15题）
    "‘大漠孤烟直’的下一句是？": ["长河落日圆", "孤城遥望玉门关", "春风不度玉门关", "西出阳关无故人"],
    "‘劝君更尽一杯酒’的下一句是？": ["西出阳关无故人", "天下谁人不识君", "莫愁前路无知己", "白云千载空悠悠"],
    "‘人生自古谁无死’的下一句是？": ["留取丹心照汗青", "要留清白在人间", "家祭无忘告乃翁", "岂因祸福避趋之"],
    "‘接天莲叶无穷碧’的下一句是？": ["映日荷花别样红", "春来江水绿如蓝", "水村山郭酒旗风", "浅草才能没马蹄"],
    
    # 成语辨析类（10题）
    "下列成语使用正确的是？": ["首当其冲", "炙手可热", "鼎力相助", "抛砖引玉"],
    "与‘画蛇添足’意思相近的是？": ["多此一举", "锦上添花", "雪中送炭", "点石成金"],
    "形容勤奋学习的成语是？": ["凿壁偷光", "狐假虎威", "守株待兔", "滥竽充数"],
    
    # 文言文理解（5题）
    "‘之’字用法不同类的是？": ["公将鼓之", "择其善者而从之", "宋何罪之有", "马之千里者"],
    "‘肉食者谋之，又何间焉’的‘间’意思是？": ["参与", "离间", "间隔", "间谍"],
    
    # 现代文理解（5题）
    "朱自清《背影》的主要情感是？": ["父子亲情", "思乡之情", "爱国情怀", "友情珍贵"],
    "下列属于议论文的是？": ["《拿来主义》", "《荷塘月色》", "《背影》", "《故都的秋》"],
    
    # 补充剩余题目（示例）：
    "‘落霞与孤鹜齐飞’的下一句是？": ["秋水共长天一色", "烟波江上使人愁", "芳草萋萋鹦鹉洲", "两山排闼送青来"],
    "《三国演义》中‘三顾茅庐’的是？": ["刘备", "曹操", "孙权", "周瑜"],
    "‘但愿人长久，千里共婵娟’中的‘婵娟’指？": ["月亮", "美女", "嫦娥", "云彩"],
    "下列不属于《诗经》表现手法的是？": ["赋", "比", "兴", "对仗"],
    "‘出淤泥而不染’赞颂的是？": ["莲花", "梅花", "菊花", "竹子"],
    "《茶馆》的作者是？": ["老舍", "曹禺", "巴金", "矛盾"],
    "‘温故而知新’出自？": ["《论语》", "《孟子》", "《大学》", "《中庸》"],
    "‘先天下之忧而忧’出自哪位文人？": ["范仲淹", "杜甫", "苏轼", "白居易"],
    "‘采菊东篱下，悠然见南山’的作者是？": ["陶渊明", "王维", "孟浩然", "李白"],
    "《雷雨》中与周萍有感情纠葛的是？": ["繁漪", "四凤", "侍萍", "周冲"],
    "‘士别三日，当刮目相看’与谁有关？": ["吕蒙", "周瑜", "诸葛亮", "陆逊"],
    "‘醉翁之意不在酒’中的醉翁是？": ["欧阳修", "苏轼", "柳宗元", "范仲淹"],
    "‘青青子衿，悠悠我心’出自？": ["《诗经》", "《楚辞》", "《古诗十九首》", "《乐府诗集》"],
    "下列作品属于莫言的是？": ["《红高粱》", "《活着》", "《平凡的世界》", "《白鹿原》"],
    "‘生当作人杰，死亦为鬼雄’作者是？": ["李清照", "辛弃疾", "文天祥", "陆游"],
    "《荷塘月色》中描写的大学是？": ["清华大学", "北京大学", "复旦大学", "南京大学"],
    "‘茴香豆的茴字有几种写法’出自？": ["《孔乙己》", "《阿Q正传》", "《祝福》", "《药》"],
    "‘孔雀东南飞’的文学体裁是？": ["乐府诗", "律诗", "词", "散文"],
    "‘天街小雨润如酥’的下一句是？": ["草色遥看近却无", "最是一年春好处", "绝胜烟柳满皇都", "客舍青青柳色新"],
    "《哈姆雷特》的作者是？": ["莎士比亚", "雨果", "托尔斯泰", "歌德"],
    "‘我劝天公重抖擞’的下一句是？": ["不拘一格降人才", "千金散尽还复来", "各领风骚数百年", "岂因祸福避趋之"],
    "‘心有灵犀一点通’出自？": ["李商隐", "李白", "杜甫", "白居易"],
    "《巴黎圣母院》的作者是？": ["雨果", "巴尔扎克", "大仲马", "莫泊桑"],
    "‘防民之口，甚于防川’出自？": ["《国语》", "《论语》", "《孟子》", "《左传》"],
    "‘大珠小珠落玉盘’形容什么乐器？": ["琵琶", "古筝", "箜篌", "扬琴"],
    "‘金戈铁马，气吞万里如虎’赞颂的是？": ["刘裕", "岳飞", "文天祥", "辛弃疾"],
    "《老人与海》的作者是？": ["海明威", "马克吐温", "杰克伦敦", "欧亨利"],
    "‘两情若是久长时’的下一句是？": ["又岂在朝朝暮暮", "此恨绵绵无绝期", "人间正道是沧桑", "为伊消得人憔悴"],
    "‘落红不是无情物’的下一句是？": ["化作春泥更护花", "春江水暖鸭先知", "千树万树梨花开", "暗香浮动月黄昏"],
    "《变色龙》塑造的主要人物是？": ["奥楚蔑洛夫", "别里科夫", "葛朗台", "夏洛克"],
    "‘天生我材必有用’出自？": ["《将进酒》", "《蜀道难》", "《梦游天姥吟留别》", "《长恨歌》"],
    "‘不为五斗米折腰’的诗人是？": ["陶渊明", "李白", "杜甫", "王维"],
    "《威尼斯商人》中的吝啬鬼是？": ["夏洛克", "阿巴贡", "葛朗台", "泼留希金"],
    "‘周公吐哺’的典故出自？": ["《史记》", "《汉书》", "《三国志》", "《后汉书》"],
}

# 创建 10 份不同的测试试卷，每份试卷包含 50 道题目，每道题目有 4 个选项，每道题目有 1 个正确答案。
# 试卷的题目内容随机，试卷的答案随机
def create_test_paper(paper_num=10, question_num=50):
  for k in range(paper_num):
    print("试卷", k+1)
    # 定义试卷题目和答案
    question_file = open("papers/questions_"+str(k+1)+".txt", "w")
    answer_file = open("papers/answers_"+str(k+1)+".txt", "w")

    # 打乱题目顺序
    question_list = list(chinese_questions.items())
    random.shuffle(question_list)

    # print(question_list)

    for i in range(question_num):
      question, answers = question_list[i]
      correct = answers[0]
      
      # 生成错误选项（需保证数据包含足够错误选项）
      wrongs = answers[1:] if len(answers) >=4 else random.sample(get_all_wrongs(), 3)
      options = [correct] + wrongs
      random.shuffle(options)
      
      # 写入题目
      question_file.write(f"{i+1}. {question}\n")
      for j, opt in enumerate(options):
          question_file.write(f"   {chr(65+j)}. {opt}\n")
      
      # 记录答案
      answer_letter = chr(65 + options.index(correct))
      answer_file.write(f"{i+1}. {answer_letter}\n")

    # 关闭文件
    question_file.close()
    answer_file.close()

# 清空旧试卷和答案
def clear_test_paper():
  for file in os.listdir("papers"):
    if file.startswith("questions_") or file.startswith("answers_"):
      os.remove(os.path.join("papers", file))

# 创建 10 份测试试卷
clear_test_paper()
create_test_paper(2)

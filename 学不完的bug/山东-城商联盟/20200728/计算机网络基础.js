// 网络协议
// ⭐️ OSI体系 - 7层
// 1 物理层
// 2 链路层
// 3 网络层
// 4 传输层
// 5 会话层
// 6 表示层
// 7 应用层

// ⭐️ TCP/IP体系 - 4层
// 1 网络接口层
// 2 网络层 ip
// 3 运输层 tcp udp
// 4 应用层 http


// 五层体系 - 5层
// 1 物理层
// 2 链路层
// 3 网络层
// 4 运输层
// 5 应用层





// TCP
// 传输层通信协议
// 基于TCP的应用层协议 HTTP FTP SMTP Telnet POP3



// UDP
// 传输层通信协议
// 基于TCP的应用层协议 TFTP SNMP DNS


// UDP的特点
// 1 无连接 - 传输数据不用建立UDP连接
// 2 不可靠 - 数据包发送后, 不管是否达到接收方, 可能触点丢包现象
// 3 面向报文 - 以数据报文(包)的形式发送, 无长度限制, 一次性发送
// 4 无拥塞控制 - 不可靠传输, 不管是否达到接受方, 不需要拥塞控制



// UDP 数据段  UDP首部 + UDP数据

// 1 UDP首部 8字节 4字段 
// a 源端口 - 对方回信是使用,  不用则设为全0
// b 目的端口 - 终点接收报文使用
// c 长度 - 最小为8
// d 检验和 - 检验UDP的数据在传输过程中是否发生错误
// e 伪首部 12字节 计算检验和(不向下传送, 也不向上递交)




// socket
// 不是协议, 而是一种编程调用接口, 属于传输层
// 成对出现 Socket = {(ip1: port), (ip2:port)}




// ⭐️ 在浏览器中输入url地址 ->> 显示主页的过程
// 1 浏览器查找域名的ip地址 - dns解析
// a dns查找过程：浏览器缓存 路由器缓存 dns缓存

// 2 浏览器向web服务器发送一个http请求
// 3 服务器处理请求
// 4 服务器返回一个html响应
// 5 浏览器显示html
// a TCP：建立一个TCP连接
// b IP：建立TCP连接时, 需要发送数据, 发送数据在网络应用层使用IP协议
// c OPSF：IP数据包在路由器之间, 路由器使用OPSF协议
// d ARP：路由器在与服务器通信时, 需要将IP地址转换为MAC地址, 使用ARP协议
// e HTTP：TCP建立连接后, 使用HTTP协议访问网页



// IP 地址 - IPv4
// 32位= 网络号+ 主机号
// 网络号 - 整个因特网范围内唯一
// 主机号 - 在网络号指明的网络范围内唯一

// IP 地址分为5类 - 网络号 主机号占的字节数不同
// A类 1 ~ 126
// B类 128 ~ 191
// C类 192 ~ 223
// D类 224 ~ 239
// E类 240 ~ 255


// 特殊的IP地址
// 1 32位全0 - 本网络上的本主机 0.0.0.0
// 2 32位全1 - 整个TCP/IP网络的广播地址 255.255.255.255
// 3 主机号全0 - 本网络本身 22.22.22.0
// 4 主机号全1 - 本网络的广播地址 22.22.22.255
// 5 127.0.0.0 - 环路自检地址, 表示任意主机本身, 目的地址为环路地址的IP数据报永远不会出现在任何网络上


// Ping的过程  测试两个主机的连通性
// 1 向目的主机发送多个ICMP回送报文协议
// 2 根据目的报文主机返回的ICMP回送回答报文中的时间戳, 计算往返时间
// 3 显示最终结果: 发送到目的主机的ip地址、发送&接收&丢失的分组数、往返时间的最大、最小&平均值

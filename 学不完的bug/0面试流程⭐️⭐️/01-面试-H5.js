
// 事件传播⭐️

// 1 捕获阶段：事件从 window 开始向下触发，直至到达目标元素
// 2 目标阶段：事件达到目标元素
// 3 冒泡阶段：事件从目标元素开始向上冒泡，直至达到 window


// 3.3 DOM事件捕获的具体流程
// 捕获的流程为：window -> document -> html -> body -> ... -> 目标元素
// 冒泡的流程为：目标元素 -> ... -> body -> html -> document -> window。

// event.target: 触发事件的元素
// event.currentTarget: 绑定事件的目标元素
// ************************************************************************************************************************

// dom - 文档对象模型

// 浏览器渲染
// dom tree - css tree - render tree - paint
// 浏览器从左上角到右下角渲染
// 第一次打开页面至少会触发一次回流和重绘

// reflow  repaint
// 页面结构的变动会触发回流
// 页面样式的变动触发重绘

// 通过class或者cssText一次性更新样式
// 离线模式： 克隆dom，操作完成后与真是dom交换
// 避免频繁直接访问计算后的样式，可以通过变量保存
// 绝对布局的dom，不会造成大量的reflow
// p标签不能嵌套太深，不要超过6层

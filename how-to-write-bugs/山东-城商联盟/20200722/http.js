// https多路复用

// Keep-alive 在一定时间内, 同一域名下的多次请求, 只建立一次http连接, 其他的请求可以复用当前的连接通道
// 1 串行文件传输 - 二进制数据帧传输
// 2 连接数过多 - 文件流，并行传输


// http vs https
// 1 最广泛的网络协, BS模型, 浏览器高效
// 2 安全, 通过SSL加密传输, 身份认证, 密钥

// a 比http多了一个ssl层
// b 需要申请证书
// c 安全但是传输耗时多
// d 连接方式和端口号不同 80 vs 443



// http 状态码

// 1** 服务器收到请求, 需请求者进一步操作
// 2** 请求成功, 返回资源
// 3** 请求重定向
// 4** 客户端错误, 请求的语法错误或者资源不存在
// 5** 服务端错误
// 301 永久重定向, 浏览器自动跳转
// 302 临时重定向, 用户自己访问原有URL
// 304 Not Modified 指定日期内未修改, 不返回资源
// 403 服务器拒绝执行请求
// 404 请求的资源不存在
// 500 内部服务器错误



// 正向代理和反向代理
// 正向代理
// 1 访问原来不能访问的资源
// 2 实现缓存
// 3 客户端访问授权, 上网认证
// 4 记录用户的访问记录

// 反向代理
// 1 隐藏内网真实地址, 防止web攻击大型网站, 将反向代理作为公网地址
// 2 负载均衡





// TCP 和UDP
// TCP 传输控制协议, 面向连接, 可靠传输
// UDP 用户数据报协议, 面向无连接, 不可靠传输



